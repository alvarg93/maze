#version 330


out vec4 pixelColor; //Zmienna wyjsciowa fragment shadera. Zapisuje sie do niej ostateczny (prawie) kolor piksela
in vec4 ic;
in vec4 n;
in vec4 l, l_up, l_down;
in vec4 v;
in vec4 ver;
in float distance;
uniform vec4 La;
uniform vec4 Ma;
uniform vec4 Ld;
uniform vec4 Ls;
uniform vec4 Ms;
uniform vec4 m_center;
uniform vec4 m_eye;
uniform vec4 m_up;
uniform mat4 V;
uniform mat4 M;
uniform vec4 pos;
uniform vec4 elevator_pos_up;
uniform vec4 elevator_pos_down;
in vec2 iTexCoord;
uniform sampler2D textureMap0;

in vec3 eye;
in vec3 lightDir;

void main(void) {
	
	float slight_val = 0.95;
	float phong_val=1000;
	int toon_val=7;
	vec4 my_n=normalize(n);
	vec4 my_l=normalize(l);
	vec4 my_v=normalize(v);
	vec4 my_l_up=normalize(l_up);
	vec4 my_l_down=normalize(l_down);

	vec4 r = reflect(-my_l,my_n);
	
	float distance = length(ver-V*m_eye)+1.0f;

	vec4 m_eye_mov = normalize(m_center);

	//latarka
	vec4 my_ver = normalize(ver);
	vec4 my_up = normalize(m_up);
	vec4 dir_vec = normalize(-V*(m_eye-m_center - 10*m_eye_mov));
	float spotlight_angle = dot(dir_vec,my_ver);


	float nl=max(0,dot(my_n,my_l));
	vec4 mod=vec4(nl/distance,nl/distance,nl/distance,1);

	float distance_a = length(ver-V*elevator_pos_up) + 1.0f;
	float distance_b = length(ver-V*elevator_pos_down) + 1.0f;
	float nl2=max(0,dot(my_n,my_l_up));
	vec4 modup=vec4(nl2/distance_a,nl2/distance_a,nl2/distance_a,1);
	float nl3=max(0,dot(my_n,my_l_down));
	vec4 moddown=vec4(nl3/distance_b,nl3/distance_b,nl3/distance_b,1);

	vec4 Ld1 = vec4(1.5f,1.5f,1.5f,1.0f);

	float rv=pow(max(0,dot(r,my_v)),phong_val);
	vec4 mod2=vec4(rv,rv,rv,0);
	float fos1 = 0.1;
	float fos2 = 0.1;	
	float fos3 = 1;
	float fade_out=1/(fos1*distance*distance+fos2*distance+fos3);
	vec4 mod3=vec4(fade_out,fade_out,fade_out,1);

	float vDif = 1.0 -slight_val;
	float fFactor = clamp((spotlight_angle-slight_val)/vDif, 0.0, 1.0);

	vec4 texColor=texture(textureMap0,iTexCoord);
	if(texColor.a==0)discard;
	pixelColor=texColor*(mod+Ld1*(moddown+modup));//texColor*(mod+modup+moddown);

	if((spotlight_angle>slight_val)){
		pixelColor += vec4(0.3,0.3,0.3,1.0)*fFactor/(distance*0.2);
	}
}
